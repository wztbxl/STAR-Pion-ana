//
// File generated by rootcint at Wed Dec 27 03:42:09 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIStRootdIStFmsUtildIStFmsUtil_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StFmsUtil_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace FMSCluster {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void FMSCluster_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("FMSCluster", 0 /*version*/, ".sl73_gcc485/obj/StRoot/StFmsUtil/StFmsTower.h", 34,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &FMSCluster_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void FMSCluster_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void FMSClustercLcLStFmsTowerCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FMSClustercLcLStFmsTowerCluster(void *p);
   static void deleteArray_FMSClustercLcLStFmsTowerCluster(void *p);
   static void destruct_FMSClustercLcLStFmsTowerCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FMSCluster::StFmsTowerCluster*)
   {
      ::FMSCluster::StFmsTowerCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FMSCluster::StFmsTowerCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FMSCluster::StFmsTowerCluster", ::FMSCluster::StFmsTowerCluster::Class_Version(), ".sl73_gcc485/obj/StRoot/StFmsUtil/StFmsTowerCluster.h", 58,
                  typeid(::FMSCluster::StFmsTowerCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FMSCluster::StFmsTowerCluster::Dictionary, isa_proxy, 4,
                  sizeof(::FMSCluster::StFmsTowerCluster) );
      instance.SetDelete(&delete_FMSClustercLcLStFmsTowerCluster);
      instance.SetDeleteArray(&deleteArray_FMSClustercLcLStFmsTowerCluster);
      instance.SetDestructor(&destruct_FMSClustercLcLStFmsTowerCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FMSCluster::StFmsTowerCluster*)
   {
      return GenerateInitInstanceLocal((::FMSCluster::StFmsTowerCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FMSCluster::StFmsTowerCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FMSClustercLcLStFmsTower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FMSClustercLcLStFmsTower(void *p = 0);
   static void *newArray_FMSClustercLcLStFmsTower(Long_t size, void *p);
   static void delete_FMSClustercLcLStFmsTower(void *p);
   static void deleteArray_FMSClustercLcLStFmsTower(void *p);
   static void destruct_FMSClustercLcLStFmsTower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FMSCluster::StFmsTower*)
   {
      ::FMSCluster::StFmsTower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FMSCluster::StFmsTower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FMSCluster::StFmsTower", ::FMSCluster::StFmsTower::Class_Version(), ".sl73_gcc485/obj/StRoot/StFmsUtil/StFmsTower.h", 51,
                  typeid(::FMSCluster::StFmsTower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FMSCluster::StFmsTower::Dictionary, isa_proxy, 4,
                  sizeof(::FMSCluster::StFmsTower) );
      instance.SetNew(&new_FMSClustercLcLStFmsTower);
      instance.SetNewArray(&newArray_FMSClustercLcLStFmsTower);
      instance.SetDelete(&delete_FMSClustercLcLStFmsTower);
      instance.SetDeleteArray(&deleteArray_FMSClustercLcLStFmsTower);
      instance.SetDestructor(&destruct_FMSClustercLcLStFmsTower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FMSCluster::StFmsTower*)
   {
      return GenerateInitInstanceLocal((::FMSCluster::StFmsTower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FMSCluster::StFmsTower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FMSClustercLcLStFmsClusterFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FMSClustercLcLStFmsClusterFinder(void *p = 0);
   static void *newArray_FMSClustercLcLStFmsClusterFinder(Long_t size, void *p);
   static void delete_FMSClustercLcLStFmsClusterFinder(void *p);
   static void deleteArray_FMSClustercLcLStFmsClusterFinder(void *p);
   static void destruct_FMSClustercLcLStFmsClusterFinder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FMSCluster::StFmsClusterFinder*)
   {
      ::FMSCluster::StFmsClusterFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FMSCluster::StFmsClusterFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FMSCluster::StFmsClusterFinder", ::FMSCluster::StFmsClusterFinder::Class_Version(), ".sl73_gcc485/obj/StRoot/StFmsUtil/StFmsClusterFinder.h", 60,
                  typeid(::FMSCluster::StFmsClusterFinder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FMSCluster::StFmsClusterFinder::Dictionary, isa_proxy, 4,
                  sizeof(::FMSCluster::StFmsClusterFinder) );
      instance.SetNew(&new_FMSClustercLcLStFmsClusterFinder);
      instance.SetNewArray(&newArray_FMSClustercLcLStFmsClusterFinder);
      instance.SetDelete(&delete_FMSClustercLcLStFmsClusterFinder);
      instance.SetDeleteArray(&deleteArray_FMSClustercLcLStFmsClusterFinder);
      instance.SetDestructor(&destruct_FMSClustercLcLStFmsClusterFinder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FMSCluster::StFmsClusterFinder*)
   {
      return GenerateInitInstanceLocal((::FMSCluster::StFmsClusterFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void StFmsDbConfig_ShowMembers(void *obj, TMemberInspector &R__insp);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StFmsDbConfig*)
   {
      ::StFmsDbConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StFmsDbConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StFmsDbConfig", ::StFmsDbConfig::Class_Version(), "StRoot/StFmsUtil/StFmsDbConfig.h", 33,
                  typeid(::StFmsDbConfig), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StFmsDbConfig::Dictionary, isa_proxy, 4,
                  sizeof(::StFmsDbConfig) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StFmsDbConfig*)
   {
      return GenerateInitInstanceLocal((::StFmsDbConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StFmsDbConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FMSClustercLcLStFmsClusterFitter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FMSClustercLcLStFmsClusterFitter(void *p = 0);
   static void *newArray_FMSClustercLcLStFmsClusterFitter(Long_t size, void *p);
   static void delete_FMSClustercLcLStFmsClusterFitter(void *p);
   static void deleteArray_FMSClustercLcLStFmsClusterFitter(void *p);
   static void destruct_FMSClustercLcLStFmsClusterFitter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FMSCluster::StFmsClusterFitter*)
   {
      ::FMSCluster::StFmsClusterFitter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FMSCluster::StFmsClusterFitter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FMSCluster::StFmsClusterFitter", ::FMSCluster::StFmsClusterFitter::Class_Version(), ".sl73_gcc485/obj/StRoot/StFmsUtil/StFmsClusterFitter.h", 90,
                  typeid(::FMSCluster::StFmsClusterFitter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FMSCluster::StFmsClusterFitter::Dictionary, isa_proxy, 4,
                  sizeof(::FMSCluster::StFmsClusterFitter) );
      instance.SetNew(&new_FMSClustercLcLStFmsClusterFitter);
      instance.SetNewArray(&newArray_FMSClustercLcLStFmsClusterFitter);
      instance.SetDelete(&delete_FMSClustercLcLStFmsClusterFitter);
      instance.SetDeleteArray(&deleteArray_FMSClustercLcLStFmsClusterFitter);
      instance.SetDestructor(&destruct_FMSClustercLcLStFmsClusterFitter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FMSCluster::StFmsClusterFitter*)
   {
      return GenerateInitInstanceLocal((::FMSCluster::StFmsClusterFitter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFitter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FMSClustercLcLStFmsEventClusterer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_FMSClustercLcLStFmsEventClusterer(void *p);
   static void deleteArray_FMSClustercLcLStFmsEventClusterer(void *p);
   static void destruct_FMSClustercLcLStFmsEventClusterer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FMSCluster::StFmsEventClusterer*)
   {
      ::FMSCluster::StFmsEventClusterer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FMSCluster::StFmsEventClusterer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FMSCluster::StFmsEventClusterer", ::FMSCluster::StFmsEventClusterer::Class_Version(), ".sl73_gcc485/obj/StRoot/StFmsUtil/StFmsEventClusterer.h", 63,
                  typeid(::FMSCluster::StFmsEventClusterer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FMSCluster::StFmsEventClusterer::Dictionary, isa_proxy, 4,
                  sizeof(::FMSCluster::StFmsEventClusterer) );
      instance.SetDelete(&delete_FMSClustercLcLStFmsEventClusterer);
      instance.SetDeleteArray(&deleteArray_FMSClustercLcLStFmsEventClusterer);
      instance.SetDestructor(&destruct_FMSClustercLcLStFmsEventClusterer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FMSCluster::StFmsEventClusterer*)
   {
      return GenerateInitInstanceLocal((::FMSCluster::StFmsEventClusterer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FMSCluster::StFmsEventClusterer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace FMSCluster {
//______________________________________________________________________________
atomic_TClass_ptr StFmsTowerCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsTowerCluster::Class_Name()
{
   return "FMSCluster::StFmsTowerCluster";
}

//______________________________________________________________________________
const char *StFmsTowerCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTowerCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsTowerCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTowerCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsTowerCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTowerCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsTowerCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTowerCluster*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace FMSCluster
      namespace FMSCluster {
//______________________________________________________________________________
atomic_TClass_ptr StFmsTower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsTower::Class_Name()
{
   return "FMSCluster::StFmsTower";
}

//______________________________________________________________________________
const char *StFmsTower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsTower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsTower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsTower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsTower*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace FMSCluster
      namespace FMSCluster {
//______________________________________________________________________________
atomic_TClass_ptr StFmsClusterFinder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsClusterFinder::Class_Name()
{
   return "FMSCluster::StFmsClusterFinder";
}

//______________________________________________________________________________
const char *StFmsClusterFinder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsClusterFinder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsClusterFinder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsClusterFinder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFinder*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace FMSCluster
//______________________________________________________________________________
atomic_TClass_ptr StFmsDbConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsDbConfig::Class_Name()
{
   return "StFmsDbConfig";
}

//______________________________________________________________________________
const char *StFmsDbConfig::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsDbConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsDbConfig::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsDbConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsDbConfig::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsDbConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsDbConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StFmsDbConfig*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace FMSCluster {
//______________________________________________________________________________
atomic_TClass_ptr StFmsClusterFitter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsClusterFitter::Class_Name()
{
   return "FMSCluster::StFmsClusterFitter";
}

//______________________________________________________________________________
const char *StFmsClusterFitter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFitter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsClusterFitter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFitter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsClusterFitter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFitter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsClusterFitter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsClusterFitter*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace FMSCluster
      namespace FMSCluster {
//______________________________________________________________________________
atomic_TClass_ptr StFmsEventClusterer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StFmsEventClusterer::Class_Name()
{
   return "FMSCluster::StFmsEventClusterer";
}

//______________________________________________________________________________
const char *StFmsEventClusterer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsEventClusterer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StFmsEventClusterer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsEventClusterer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StFmsEventClusterer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsEventClusterer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StFmsEventClusterer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSCluster::StFmsEventClusterer*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace FMSCluster
      namespace FMSCluster {
//______________________________________________________________________________
void StFmsClusterFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class FMSCluster::StFmsClusterFinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FMSCluster::StFmsClusterFinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(FMSCluster::StFmsClusterFinder::Class(),this);
   }
}

} // namespace FMSCluster
//______________________________________________________________________________
      namespace FMSCluster {
void StFmsClusterFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FMSCluster::StFmsClusterFinder.
      TClass *R__cl = ::FMSCluster::StFmsClusterFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergyCutoff", &mEnergyCutoff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNClusts", &mNClusts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorId", &mDetectorId);
}

} // namespace FMSCluster
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FMSClustercLcLStFmsClusterFinder(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::FMSCluster::StFmsClusterFinder : new ::FMSCluster::StFmsClusterFinder;
   }
   static void *newArray_FMSClustercLcLStFmsClusterFinder(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::FMSCluster::StFmsClusterFinder[nElements] : new ::FMSCluster::StFmsClusterFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_FMSClustercLcLStFmsClusterFinder(void *p) {
      delete ((::FMSCluster::StFmsClusterFinder*)p);
   }
   static void deleteArray_FMSClustercLcLStFmsClusterFinder(void *p) {
      delete [] ((::FMSCluster::StFmsClusterFinder*)p);
   }
   static void destruct_FMSClustercLcLStFmsClusterFinder(void *p) {
      typedef ::FMSCluster::StFmsClusterFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FMSCluster::StFmsClusterFinder

      namespace FMSCluster {
//______________________________________________________________________________
void StFmsClusterFitter::Streamer(TBuffer &R__b)
{
   // Stream an object of class FMSCluster::StFmsClusterFitter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FMSCluster::StFmsClusterFitter::Class(),this);
   } else {
      R__b.WriteClassBuffer(FMSCluster::StFmsClusterFitter::Class(),this);
   }
}

} // namespace FMSCluster
//______________________________________________________________________________
      namespace FMSCluster {
void StFmsClusterFitter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FMSCluster::StFmsClusterFitter.
      TClass *R__cl = ::FMSCluster::StFmsClusterFitter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexz", &vertexz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mScaleShowerShape", &mScaleShowerShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mDb", &mDb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMinuit", &mMinuit);
      R__insp.InspectMember(mMinuit, "mMinuit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mdetectorId", &mdetectorId);
      TObject::ShowMembers(R__insp);
}

} // namespace FMSCluster
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FMSClustercLcLStFmsClusterFitter(void *p) {
      return  p ? new(p) ::FMSCluster::StFmsClusterFitter : new ::FMSCluster::StFmsClusterFitter;
   }
   static void *newArray_FMSClustercLcLStFmsClusterFitter(Long_t nElements, void *p) {
      return p ? new(p) ::FMSCluster::StFmsClusterFitter[nElements] : new ::FMSCluster::StFmsClusterFitter[nElements];
   }
   // Wrapper around operator delete
   static void delete_FMSClustercLcLStFmsClusterFitter(void *p) {
      delete ((::FMSCluster::StFmsClusterFitter*)p);
   }
   static void deleteArray_FMSClustercLcLStFmsClusterFitter(void *p) {
      delete [] ((::FMSCluster::StFmsClusterFitter*)p);
   }
   static void destruct_FMSClustercLcLStFmsClusterFitter(void *p) {
      typedef ::FMSCluster::StFmsClusterFitter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FMSCluster::StFmsClusterFitter

//______________________________________________________________________________
void StFmsDbConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class StFmsDbConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StFmsDbConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(StFmsDbConfig::Class(),this);
   }
}

//______________________________________________________________________________
void StFmsDbConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StFmsDbConfig.
      TClass *R__cl = ::StFmsDbConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRecPar", (void*)&mRecPar);
      R__insp.InspectMember("map<std::string,std::string>", (void*)&mRecPar, "mRecPar.", false);
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::StFmsDbConfig

      namespace FMSCluster {
//______________________________________________________________________________
void StFmsEventClusterer::Streamer(TBuffer &R__b)
{
   // Stream an object of class FMSCluster::StFmsEventClusterer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FMSCluster::StFmsEventClusterer::Class(),this);
   } else {
      R__b.WriteClassBuffer(FMSCluster::StFmsEventClusterer::Class(),this);
   }
}

} // namespace FMSCluster
//______________________________________________________________________________
      namespace FMSCluster {
void StFmsEventClusterer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FMSCluster::StFmsEventClusterer.
      TClass *R__cl = ::FMSCluster::StFmsEventClusterer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mClusterFinder", &mClusterFinder);
      R__insp.InspectMember(mClusterFinder, "mClusterFinder.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorId", &mDetectorId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTowers", &mTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTowerWidthXY", (void*)&mTowerWidthXY);
      R__insp.InspectMember("vector<Double_t>", (void*)&mTowerWidthXY, "mTowerWidthXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFmsDbMaker", &mFmsDbMaker);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGlobalRefit", &mGlobalRefit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMergeSmallToLarge", &mMergeSmallToLarge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTry1PhotonFitWhen2PhotonFitFailed", &mTry1PhotonFitWhen2PhotonFitFailed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCategorizationAlgo", &mCategorizationAlgo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mScaleShowerShape", &mScaleShowerShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MuDst", &MuDst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertexz", &vertexz);
      TObject::ShowMembers(R__insp);
}

} // namespace FMSCluster
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_FMSClustercLcLStFmsEventClusterer(void *p) {
      delete ((::FMSCluster::StFmsEventClusterer*)p);
   }
   static void deleteArray_FMSClustercLcLStFmsEventClusterer(void *p) {
      delete [] ((::FMSCluster::StFmsEventClusterer*)p);
   }
   static void destruct_FMSClustercLcLStFmsEventClusterer(void *p) {
      typedef ::FMSCluster::StFmsEventClusterer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FMSCluster::StFmsEventClusterer

      namespace FMSCluster {
//______________________________________________________________________________
void StFmsTower::Streamer(TBuffer &R__b)
{
   // Stream an object of class FMSCluster::StFmsTower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FMSCluster::StFmsTower::Class(),this);
   } else {
      R__b.WriteClassBuffer(FMSCluster::StFmsTower::Class(),this);
   }
}

} // namespace FMSCluster
//______________________________________________________________________________
      namespace FMSCluster {
void StFmsTower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FMSCluster::StFmsTower.
      TClass *R__cl = ::FMSCluster::StFmsTower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mHit", &mHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mColumn", &mColumn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRow", &mRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCluster", &mCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mX", &mX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mY", &mY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mE", &mE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mW", &mW);
      TObject::ShowMembers(R__insp);
}

} // namespace FMSCluster
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FMSClustercLcLStFmsTower(void *p) {
      return  p ? new(p) ::FMSCluster::StFmsTower : new ::FMSCluster::StFmsTower;
   }
   static void *newArray_FMSClustercLcLStFmsTower(Long_t nElements, void *p) {
      return p ? new(p) ::FMSCluster::StFmsTower[nElements] : new ::FMSCluster::StFmsTower[nElements];
   }
   // Wrapper around operator delete
   static void delete_FMSClustercLcLStFmsTower(void *p) {
      delete ((::FMSCluster::StFmsTower*)p);
   }
   static void deleteArray_FMSClustercLcLStFmsTower(void *p) {
      delete [] ((::FMSCluster::StFmsTower*)p);
   }
   static void destruct_FMSClustercLcLStFmsTower(void *p) {
      typedef ::FMSCluster::StFmsTower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FMSCluster::StFmsTower

      namespace FMSCluster {
//______________________________________________________________________________
void StFmsTowerCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class FMSCluster::StFmsTowerCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FMSCluster::StFmsTowerCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(FMSCluster::StFmsTowerCluster::Class(),this);
   }
}

} // namespace FMSCluster
//______________________________________________________________________________
      namespace FMSCluster {
void StFmsTowerCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FMSCluster::StFmsTowerCluster.
      TClass *R__cl = ::FMSCluster::StFmsTowerCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIndex", &mIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorId", &mDetectorId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEtot", &mEtot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSigmaX", &mSigmaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSigmaY", &mSigmaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSigmaXY", &mSigmaXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mThetaAxis", &mThetaAxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChiSquare", &mChiSquare);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnergyCutoff", &mEnergyCutoff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTowers", (void*)&mTowers);
      R__insp.InspectMember("FMSCluster::StFmsTowerCluster::Towers", (void*)&mTowers, "mTowers.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhotons", (void*)&mPhotons);
      R__insp.InspectMember("FMSCluster::StFmsTowerCluster::Photons", (void*)&mPhotons, "mPhotons.", false);
}

} // namespace FMSCluster
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_FMSClustercLcLStFmsTowerCluster(void *p) {
      delete ((::FMSCluster::StFmsTowerCluster*)p);
   }
   static void deleteArray_FMSClustercLcLStFmsTowerCluster(void *p) {
      delete [] ((::FMSCluster::StFmsTowerCluster*)p);
   }
   static void destruct_FMSClustercLcLStFmsTowerCluster(void *p) {
      typedef ::FMSCluster::StFmsTowerCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FMSCluster::StFmsTowerCluster

namespace ROOTDict {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,string>

/********************************************************
* .sl73_gcc485/obj/StRoot/StFmsUtil/StFmsUtil_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStFmsUtil_Cint();

extern "C" void G__set_cpp_environmentStFmsUtil_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StFmsClusterFinder.h");
  G__add_compiledheader("StFmsClusterFitter.h");
  G__add_compiledheader("StFmsDbConfig.h");
  G__add_compiledheader("StFmsEventClusterer.h");
  G__add_compiledheader("StFmsTower.h");
  G__add_compiledheader("StFmsTowerCluster.h");
  G__cpp_reset_tagtableStFmsUtil_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStFmsUtil_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* FMSCluster */
static int G__StFmsUtil_Cint_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FMSCluster::asmsqrt((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FMSCluster::showerShapeComponent((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* FMSCluster::StFmsTowerCluster */
static int G__StFmsUtil_Cint_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsTowerCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FMSCluster::StFmsTowerCluster((StFmsCluster*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) FMSCluster::StFmsTowerCluster((StFmsCluster*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->Clear((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->calculateClusterMoments((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->findClusterAxis((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->setIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->detectorId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->etot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->sigmaX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->sigmaY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->sigmaXY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->thetaAxis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->chiSquare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->setChiSquare((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->energyCutoff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const FMSCluster::StFmsTowerCluster::Towers& obj = ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->towers();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const FMSCluster::StFmsTowerCluster::Towers& obj = ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->towers();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const FMSCluster::StFmsTowerCluster::Photons& obj = ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->photons();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const FMSCluster::StFmsTowerCluster::Photons& obj = ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->photons();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->cluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->cluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->release());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FMSCluster::StFmsTowerCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsTowerCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FMSCluster::StFmsTowerCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FMSCluster::StFmsTowerCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const FMSCluster::StFmsTowerCluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTowerCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsTowerCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsTowerCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsTowerCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_192_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsTowerCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FMSCluster::StFmsTowerCluster G__TFMSClustercLcLStFmsTowerCluster;
static int G__StFmsUtil_Cint_192_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FMSCluster::StFmsTowerCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FMSCluster::StFmsTowerCluster*) (soff+(sizeof(FMSCluster::StFmsTowerCluster)*i)))->~G__TFMSClustercLcLStFmsTowerCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FMSCluster::StFmsTowerCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FMSCluster::StFmsTowerCluster*) (soff))->~G__TFMSClustercLcLStFmsTowerCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FMSCluster::StFmsTower */
static int G__StFmsUtil_Cint_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsTower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSCluster::StFmsTower[n];
     } else {
       p = new((void*) gvp) FMSCluster::StFmsTower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSCluster::StFmsTower;
     } else {
       p = new((void*) gvp) FMSCluster::StFmsTower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsTower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FMSCluster::StFmsTower((StFmsHit*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FMSCluster::StFmsTower((StFmsHit*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FMSCluster::StFmsTower*) G__getstructoffset())->initialize((StFmsDbMaker*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const FMSCluster::StFmsTower*) G__getstructoffset())->isNeighbor(*(FMSCluster::StFmsTower*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const FMSCluster::StFmsTower*) G__getstructoffset())->hit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FMSCluster::StFmsTower*) G__getstructoffset())->column());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FMSCluster::StFmsTower*) G__getstructoffset())->row());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FMSCluster::StFmsTower*) G__getstructoffset())->cluster());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTower*) G__getstructoffset())->setCluster((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTower*) G__getstructoffset())->setXY((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTower*) G__getstructoffset())->x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTower*) G__getstructoffset())->y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTower*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsTower*) G__getstructoffset())->w());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FMSCluster::StFmsTower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsTower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FMSCluster::StFmsTower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FMSCluster::StFmsTower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsTower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsTower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsTower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsTower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsTower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFmsUtil_Cint_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FMSCluster::StFmsTower* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FMSCluster::StFmsTower(*(FMSCluster::StFmsTower*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FMSCluster::StFmsTower G__TFMSClustercLcLStFmsTower;
static int G__StFmsUtil_Cint_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FMSCluster::StFmsTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FMSCluster::StFmsTower*) (soff+(sizeof(FMSCluster::StFmsTower)*i)))->~G__TFMSClustercLcLStFmsTower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FMSCluster::StFmsTower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FMSCluster::StFmsTower*) (soff))->~G__TFMSClustercLcLStFmsTower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FMSCluster::StFmsClusterFinder */
static int G__StFmsUtil_Cint_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsClusterFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSCluster::StFmsClusterFinder((double) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) FMSCluster::StFmsClusterFinder((double) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FMSCluster::StFmsClusterFinder[n];
       } else {
         p = new((void*) gvp) FMSCluster::StFmsClusterFinder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new FMSCluster::StFmsClusterFinder;
       } else {
         p = new((void*) gvp) FMSCluster::StFmsClusterFinder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const FMSCluster::StFmsClusterFinder*) G__getstructoffset())->calculateClusterMoments((FMSCluster::StFmsTowerCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FMSCluster::StFmsClusterFinder*) G__getstructoffset())->categorise((FMSCluster::StFmsTowerCluster*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FMSCluster::StFmsClusterFinder*) G__getstructoffset())->categorise2((FMSCluster::StFmsTowerCluster*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const FMSCluster::StFmsClusterFinder*) G__getstructoffset())->momentEnergyCutoff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FMSCluster::StFmsClusterFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsClusterFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FMSCluster::StFmsClusterFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FMSCluster::StFmsClusterFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const FMSCluster::StFmsClusterFinder*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFinder*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFinder*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsClusterFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsClusterFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsClusterFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsClusterFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StFmsUtil_Cint_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FMSCluster::StFmsClusterFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FMSCluster::StFmsClusterFinder(*(FMSCluster::StFmsClusterFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FMSCluster::StFmsClusterFinder G__TFMSClustercLcLStFmsClusterFinder;
static int G__StFmsUtil_Cint_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FMSCluster::StFmsClusterFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FMSCluster::StFmsClusterFinder*) (soff+(sizeof(FMSCluster::StFmsClusterFinder)*i)))->~G__TFMSClustercLcLStFmsClusterFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FMSCluster::StFmsClusterFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FMSCluster::StFmsClusterFinder*) (soff))->~G__TFMSClustercLcLStFmsClusterFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StFmsUtil_Cint_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsClusterFinder* dest = (FMSCluster::StFmsClusterFinder*) G__getstructoffset();
   *dest = *(FMSCluster::StFmsClusterFinder*) libp->para[0].ref;
   const FMSCluster::StFmsClusterFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StFmsDbConfig */
static int G__StFmsUtil_Cint_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StFmsDbConfig& obj = StFmsDbConfig::Instance();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFmsDbConfig*) G__getstructoffset())->fillMap((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFmsDbConfig*) G__getstructoffset())->fillFmsRec(*(fmsRec_st*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFmsDbConfig*) G__getstructoffset())->readMap(*(fmsRec_st*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StFmsDbConfig*) G__getstructoffset())->writeMap((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StFmsDbConfig*) G__getstructoffset())->isMapEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StFmsDbConfig*) G__getstructoffset())->keyExist(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((StFmsDbConfig*) G__getstructoffset())->getParameter(*((string*) G__int(libp->para[0])));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsDbConfig*) G__getstructoffset())->setParameter(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StFmsDbConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsDbConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StFmsDbConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StFmsDbConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StFmsDbConfig*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsDbConfig*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsDbConfig*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StFmsDbConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsDbConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFmsDbConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StFmsDbConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_632_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StFmsDbConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}


/* FMSCluster::StFmsClusterFitter */
static int G__StFmsUtil_Cint_752_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsClusterFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FMSCluster::StFmsClusterFitter(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (StFmsDbMaker*) G__int(libp->para[4]), (StMuDst*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) FMSCluster::StFmsClusterFitter(
(Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (StFmsDbMaker*) G__int(libp->para[4]), (StMuDst*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsClusterFitter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSCluster::StFmsClusterFitter[n];
     } else {
       p = new((void*) gvp) FMSCluster::StFmsClusterFitter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSCluster::StFmsClusterFitter;
     } else {
       p = new((void*) gvp) FMSCluster::StFmsClusterFitter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->showerShapeFunction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->setTowers((FMSCluster::StFmsTowerCluster::Towers*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->fitNPhoton(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, *(vector<double>*) libp->para[3].ref
, (FMSCluster::PhotonList*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->fitNPhoton(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, (FMSCluster::PhotonList*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FMSCluster::StFmsClusterFitter::energyDepositionInTowerOLD((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FMSCluster::StFmsClusterFitter::energyDepositionInTower(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FMSCluster::StFmsClusterFitter::energyDepositionInTower((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) FMSCluster::StFmsClusterFitter::energyDepositionInTowerSingleLayer((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsClusterFitter::maxNFittedPhotons());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->SetVertexZ((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->SetMerge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FMSCluster::StFmsClusterFitter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsClusterFitter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FMSCluster::StFmsClusterFitter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FMSCluster::StFmsClusterFitter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsClusterFitter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsClusterFitter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsClusterFitter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsClusterFitter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_752_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsClusterFitter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FMSCluster::StFmsClusterFitter G__TFMSClustercLcLStFmsClusterFitter;
static int G__StFmsUtil_Cint_752_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FMSCluster::StFmsClusterFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FMSCluster::StFmsClusterFitter*) (soff+(sizeof(FMSCluster::StFmsClusterFitter)*i)))->~G__TFMSClustercLcLStFmsClusterFitter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FMSCluster::StFmsClusterFitter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FMSCluster::StFmsClusterFitter*) (soff))->~G__TFMSClustercLcLStFmsClusterFitter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FMSCluster::StFmsEventClusterer */
static int G__StFmsUtil_Cint_753_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSCluster::StFmsEventClusterer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FMSCluster::StFmsEventClusterer(
(StFmsDbMaker*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (StMuDst*) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) FMSCluster::StFmsEventClusterer(
(StFmsDbMaker*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (StMuDst*) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const FMSCluster::StFmsEventClusterer*) G__getstructoffset())->detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((FMSCluster::StFmsEventClusterer*) G__getstructoffset())->cluster((vector<FMSCluster::StFmsTower>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FMSCluster::StFmsEventClusterer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsEventClusterer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FMSCluster::StFmsEventClusterer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FMSCluster::StFmsEventClusterer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSCluster::StFmsEventClusterer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsEventClusterer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsEventClusterer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSCluster::StFmsEventClusterer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StFmsUtil_Cint_753_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSCluster::StFmsEventClusterer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FMSCluster::StFmsEventClusterer G__TFMSClustercLcLStFmsEventClusterer;
static int G__StFmsUtil_Cint_753_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FMSCluster::StFmsEventClusterer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FMSCluster::StFmsEventClusterer*) (soff+(sizeof(FMSCluster::StFmsEventClusterer)*i)))->~G__TFMSClustercLcLStFmsEventClusterer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FMSCluster::StFmsEventClusterer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FMSCluster::StFmsEventClusterer*) (soff))->~G__TFMSClustercLcLStFmsEventClusterer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* FMSCluster */

/* FMSCluster::StFmsTowerCluster */

/* FMSCluster::StFmsTower */

/* FMSCluster::StFmsClusterFinder */

/* StFmsDbConfig */

/* FMSCluster::StFmsClusterFitter */

/* FMSCluster::StFmsEventClusterer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStFmsUtil_Cint {
 public:
  G__Sizep2memfuncStFmsUtil_Cint(): p(&G__Sizep2memfuncStFmsUtil_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStFmsUtil_Cint::*p)();
};

size_t G__get_sizep2memfuncStFmsUtil_Cint()
{
  G__Sizep2memfuncStFmsUtil_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStFmsUtil_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower))) {
     FMSCluster::StFmsTower *G__Lderived;
     G__Lderived=(FMSCluster::StFmsTower*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower),G__get_linked_tagnum(&G__StFmsUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter))) {
     FMSCluster::StFmsClusterFitter *G__Lderived;
     G__Lderived=(FMSCluster::StFmsClusterFitter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter),G__get_linked_tagnum(&G__StFmsUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer))) {
     FMSCluster::StFmsEventClusterer *G__Lderived;
     G__Lderived=(FMSCluster::StFmsEventClusterer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer),G__get_linked_tagnum(&G__StFmsUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStFmsUtil_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<FMSCluster::StFmsTower*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TowerList",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<StFmsTower*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Towers",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster));
   G__setnewtype(-1,"/< Shorthand for tower collection",0);
   G__search_typename2("vector<StFmsFittedPhoton>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FMSCluster::StFmsFittedPhoton>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Photons",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<StFmsFittedPhoton>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSCluster));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<FMSCluster::StFmsFittedPhoton>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSCluster));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("PhotonList",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSCluster));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FMSCluster::StFmsTower>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* FMSCluster */
static void G__setup_memvarFMSCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSCluster));
   {
   }
   G__tag_memvar_reset();
}


   /* FMSCluster::StFmsTowerCluster */
static void G__setup_memvarFMSClustercLcLStFmsTowerCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster));
   { FMSCluster::StFmsTowerCluster *p; p=(FMSCluster::StFmsTowerCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mIndex=",0,"/< cluster number in an event, counts from 0");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mDetectorId=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mEtot=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mSigmaX=",0,"/< 2nd moment in x");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mSigmaY=",0,"/< 2nd moment in y");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mSigmaXY=",0,"/< 2nd moment in x-y");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mThetaAxis=",0,"/< theta angle in x-y plane that define the direction");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mChiSquare=",0,"/< Chi-square of the fitting");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mEnergyCutoff=",0,"!< Cutoff on towers to use in moment calculations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR),G__defined_typename("Towers"),-1,2,"mTowers=",0,"!< Towers that make the cluster");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR),G__defined_typename("Photons"),-1,2,"mPhotons=",0,"/< Photons in cluster");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FMSCluster::StFmsTower */
static void G__setup_memvarFMSClustercLcLStFmsTower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower));
   { FMSCluster::StFmsTower *p; p=(FMSCluster::StFmsTower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsHit),-1,-1,2,"mHit=",0,"!< Hit information, not owned by StFmsTower");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mColumn=",0,"/ < Column number, starts at 1, horizontal (STAR x-coord)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mRow=",0,"/ < Row number, starts at 1, vertical (STAR y-coord)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mCluster=",0,"/ < Index of cluster the tower is associated with");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mX=",0,"/ local x [cm]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mY=",0,"/ local y [cm]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mE=",0,"/ Energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mW=",0,"/ Tower width [cm]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FMSCluster::StFmsClusterFinder */
static void G__setup_memvarFMSClustercLcLStFmsClusterFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder));
   { FMSCluster::StFmsClusterFinder *p; p=(FMSCluster::StFmsClusterFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,-1,-2,4,"kMaxNClusters=25ULL",0,"/< We stop looking after this many");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mEnergyCutoff=",0,"/< Tower energy cutoff for cluster moments");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNClusts=",0,"/< Counter for number of found clusters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mDetectorId=",0,"current working detectorId");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StFmsDbConfig */
static void G__setup_memvarStFmsDbConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbConfig));
   { StFmsDbConfig *p; p=(StFmsDbConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,4,"mRecPar=",0,"name to value mapping");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FMSCluster::StFmsClusterFitter */
static void G__setup_memvarFMSClustercLcLStFmsClusterFitter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter));
   { FMSCluster::StFmsClusterFitter *p; p=(FMSCluster::StFmsClusterFitter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->vertexz)-(long)(p)),100,0,0,-1,-1,-1,1,"vertexz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR),G__defined_typename("Towers"),-2,4,"mTowers=",0,"/< List of towers to fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"mEnergySum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mScaleShowerShape=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbMaker),-1,-1,4,"mDb=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TMinuit),-1,-1,4,"mMinuit=",0,"/< Minuit fitting interface");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mdetectorId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FMSCluster::StFmsEventClusterer */
static void G__setup_memvarFMSClustercLcLStFmsEventClusterer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer));
   { FMSCluster::StFmsEventClusterer *p; p=(FMSCluster::StFmsEventClusterer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder),-1,-1,4,"mClusterFinder=",0,"/< Cluster-finding routine");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mDetectorId=",0,"/< ID of this FMS sub-detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR),G__defined_typename("vector<FMSCluster::StFmsTower>"),-1,4,"mTowers=",0,"/< Towers to cluster");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mTowerWidthXY=",0,"/< Geometry for this sub-detector (cm)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbMaker),-1,-1,4,"mFmsDbMaker=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mGlobalRefit=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mMergeSmallToLarge=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mTry1PhotonFitWhen2PhotonFitFailed=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mCategorizationAlgo=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mScaleShowerShape=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_StMuDst),-1,-1,4,"MuDst=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vertexz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStFmsUtil_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncFMSCluster(void) {
   /* FMSCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSCluster));
   G__memfunc_setup("asmsqrt",779,G__StFmsUtil_Cint_191_0_1, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (double (*)(double))(&FMSCluster::asmsqrt) ), 0);
   G__memfunc_setup("showerShapeComponent",2108,G__StFmsUtil_Cint_191_0_2, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - a d - - 0 - b", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double, double))(&FMSCluster::showerShapeComponent) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFMSClustercLcLStFmsTowerCluster(void) {
   /* FMSCluster::StFmsTowerCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster));
   G__memfunc_setup("StFmsTowerCluster",1760,G__StFmsUtil_Cint_192_0_1, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster), -1, 0, 2, 5, 1, 0, 
"U 'StFmsCluster' - 0 - cluster i - 'Int_t' 0 - detectorId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__StFmsUtil_Cint_192_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' optionNotUsed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateClusterMoments",2419,G__StFmsUtil_Cint_192_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - energyCutoff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findClusterAxis",1560,G__StFmsUtil_Cint_192_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - Ecoff d - 'Double_t' 0 - xwidth "
"d - 'Double_t' 0 - ywidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("index",536,G__StFmsUtil_Cint_192_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIndex",836,G__StFmsUtil_Cint_192_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorId",1031,G__StFmsUtil_Cint_192_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("etot",444,G__StFmsUtil_Cint_192_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaX",617,G__StFmsUtil_Cint_192_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaY",618,G__StFmsUtil_Cint_192_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sigmaXY",706,G__StFmsUtil_Cint_192_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thetaAxis",939,G__StFmsUtil_Cint_192_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chiSquare",933,G__StFmsUtil_Cint_192_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChiSquare",1233,G__StFmsUtil_Cint_192_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyCutoff",1265,G__StFmsUtil_Cint_192_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("towers",676,G__StFmsUtil_Cint_192_0_16, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR), G__defined_typename("FMSCluster::StFmsTowerCluster::Towers"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("towers",676,G__StFmsUtil_Cint_192_0_17, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR), G__defined_typename("FMSCluster::StFmsTowerCluster::Towers"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photons",779,G__StFmsUtil_Cint_192_0_18, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR), G__defined_typename("FMSCluster::StFmsTowerCluster::Photons"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photons",779,G__StFmsUtil_Cint_192_0_19, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR), G__defined_typename("FMSCluster::StFmsTowerCluster::Photons"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cluster",770,G__StFmsUtil_Cint_192_0_20, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cluster",770,G__StFmsUtil_Cint_192_0_21, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsCluster), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__StFmsUtil_Cint_192_0_22, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findClusterAxis",1560,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"d - 'Double_t' 0 - xwidth d - 'Double_t' 0 - ywidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma",817,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"d - 'Double_t' 0 - theta d - 'Double_t' 0 - xwidth "
"d - 'Double_t' 0 - ywidth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFmsTowerCluster",1760,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster), -1, 0, 1, 1, 4, 0, "u 'FMSCluster::StFmsTowerCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster), -1, 1, 1, 1, 4, 0, "u 'FMSCluster::StFmsTowerCluster' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFmsUtil_Cint_192_0_27, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FMSCluster::StFmsTowerCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsUtil_Cint_192_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsTowerCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsUtil_Cint_192_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FMSCluster::StFmsTowerCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsUtil_Cint_192_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FMSCluster::StFmsTowerCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StFmsUtil_Cint_192_0_31, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StFmsUtil_Cint_192_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StFmsUtil_Cint_192_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsUtil_Cint_192_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsUtil_Cint_192_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsTowerCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsUtil_Cint_192_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsTowerCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsUtil_Cint_192_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsTowerCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsUtil_Cint_192_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsTowerCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFmsTowerCluster", 1886, G__StFmsUtil_Cint_192_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFMSClustercLcLStFmsTower(void) {
   /* FMSCluster::StFmsTower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower));
   G__memfunc_setup("StFmsTower",1022,G__StFmsUtil_Cint_193_0_1, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFmsTower",1022,G__StFmsUtil_Cint_193_0_2, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower), -1, 0, 1, 5, 1, 0, "U 'StFmsHit' - 0 - fmsHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__StFmsUtil_Cint_193_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StFmsDbMaker' - 0 - database", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isNeighbor",1034,G__StFmsUtil_Cint_193_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'FMSCluster::StFmsTower' - 11 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hit",325,G__StFmsUtil_Cint_193_0_6, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsHit), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("column",654,G__StFmsUtil_Cint_193_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("row",344,G__StFmsUtil_Cint_193_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cluster",770,G__StFmsUtil_Cint_193_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCluster",1070,G__StFmsUtil_Cint_193_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXY",509,G__StFmsUtil_Cint_193_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("x",120,G__StFmsUtil_Cint_193_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("y",121,G__StFmsUtil_Cint_193_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__StFmsUtil_Cint_193_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("w",119,G__StFmsUtil_Cint_193_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFmsUtil_Cint_193_0_16, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FMSCluster::StFmsTower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsUtil_Cint_193_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsTower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsUtil_Cint_193_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FMSCluster::StFmsTower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsUtil_Cint_193_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FMSCluster::StFmsTower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsUtil_Cint_193_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsUtil_Cint_193_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsTower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsUtil_Cint_193_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsTower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsUtil_Cint_193_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsTower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsUtil_Cint_193_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsTower::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StFmsTower", 1022, G__StFmsUtil_Cint_193_0_28, (int) ('i'), G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower), -1, 0, 1, 1, 1, 0, "u 'FMSCluster::StFmsTower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StFmsTower", 1148, G__StFmsUtil_Cint_193_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFMSClustercLcLStFmsClusterFinder(void) {
   /* FMSCluster::StFmsClusterFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder));
   G__memfunc_setup("StFmsClusterFinder",1831,G__StFmsUtil_Cint_194_0_1, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder), -1, 0, 1, 1, 1, 0, "d - - 0 '0.5' energyCutoff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateClusterMoments",2419,G__StFmsUtil_Cint_194_0_2, 121, -1, -1, 0, 1, 1, 1, 8, "U 'FMSCluster::StFmsTowerCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("categorise",1062,G__StFmsUtil_Cint_194_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'FMSCluster::StFmsTowerCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("categorise2",1112,G__StFmsUtil_Cint_194_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'FMSCluster::StFmsTowerCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentEnergyCutoff",1889,G__StFmsUtil_Cint_194_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFmsUtil_Cint_194_0_6, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FMSCluster::StFmsClusterFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsUtil_Cint_194_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsClusterFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsUtil_Cint_194_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FMSCluster::StFmsClusterFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsUtil_Cint_194_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FMSCluster::StFmsClusterFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StFmsUtil_Cint_194_0_10, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StFmsUtil_Cint_194_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StFmsUtil_Cint_194_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsUtil_Cint_194_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsUtil_Cint_194_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsClusterFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsUtil_Cint_194_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsClusterFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsUtil_Cint_194_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsClusterFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsUtil_Cint_194_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsClusterFinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StFmsClusterFinder", 1831, G__StFmsUtil_Cint_194_0_18, (int) ('i'), G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder), -1, 0, 1, 1, 1, 0, "u 'FMSCluster::StFmsClusterFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StFmsClusterFinder", 1957, G__StFmsUtil_Cint_194_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StFmsUtil_Cint_194_0_20, (int) ('u'), G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder), -1, 1, 1, 1, 1, 0, "u 'FMSCluster::StFmsClusterFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStFmsDbConfig(void) {
   /* StFmsDbConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbConfig));
   G__memfunc_setup("Instance",821,G__StFmsUtil_Cint_632_0_1, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbConfig), -1, 1, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (StFmsDbConfig& (*)())(&StFmsDbConfig::Instance) ), 0);
   G__memfunc_setup("fillMap",709,G__StFmsUtil_Cint_632_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillFmsRec",999,G__StFmsUtil_Cint_632_0_3, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'fmsRec_st' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readMap",698,G__StFmsUtil_Cint_632_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'fmsRec_st' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeMap",841,G__StFmsUtil_Cint_632_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMapEmpty",1033,G__StFmsUtil_Cint_632_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("keyExist",854,G__StFmsUtil_Cint_632_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParameter",1249,G__StFmsUtil_Cint_632_0_8, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_string), -1, 1, 1, 1, 1, 1, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameter",1261,G__StFmsUtil_Cint_632_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - - u 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFmsDbConfig",1257,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbConfig), -1, 0, 0, 1, 4, 0, "", "hide constructor and destructor", (void*) NULL, 0);
   G__memfunc_setup("StFmsDbConfig",1257,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbConfig), -1, 0, 1, 1, 4, 0, "u 'StFmsDbConfig' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_StFmsDbConfig), -1, 1, 1, 1, 4, 0, "u 'StFmsDbConfig' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFmsUtil_Cint_632_0_13, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StFmsDbConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsUtil_Cint_632_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsDbConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsUtil_Cint_632_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StFmsDbConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsUtil_Cint_632_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StFmsDbConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StFmsUtil_Cint_632_0_17, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StFmsUtil_Cint_632_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StFmsUtil_Cint_632_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsUtil_Cint_632_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsUtil_Cint_632_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsDbConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsUtil_Cint_632_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFmsDbConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsUtil_Cint_632_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StFmsDbConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsUtil_Cint_632_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StFmsDbConfig::DeclFileLine) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFMSClustercLcLStFmsClusterFitter(void) {
   /* FMSCluster::StFmsClusterFitter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter));
   G__memfunc_setup("StFmsClusterFitter",1853,G__StFmsUtil_Cint_752_0_1, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - detectorId f - 'Float_t' 0 - xw "
"f - 'Float_t' 0 - yw i - 'Int_t' 0 - scaleShowerShape "
"U 'StFmsDbMaker' - 0 - mFmsDbMaker U 'StMuDst' - 0 - muDst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFmsClusterFitter",1853,G__StFmsUtil_Cint_752_0_2, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showerShapeFunction",1999,G__StFmsUtil_Cint_752_0_3, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TF2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTowers",976,G__StFmsUtil_Cint_752_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'list<FMSCluster::StFmsTower*,allocator<FMSCluster::StFmsTower*> >' 'FMSCluster::StFmsTowerCluster::Towers' 0 - towers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitNPhoton",1033,G__StFmsUtil_Cint_752_0_5, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - parameteres u 'vector<double,allocator<double> >' 'vector<double>' 11 - steps "
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - lower u 'vector<double,allocator<double> >' 'vector<double>' 11 - up "
"U 'list<FMSCluster::StFmsFittedPhoton,allocator<FMSCluster::StFmsFittedPhoton> >' 'FMSCluster::PhotonList' 0 - photons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitNPhoton",1033,G__StFmsUtil_Cint_752_0_6, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - parameters u 'vector<double,allocator<double> >' 'vector<double>' 11 - lower "
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - up U 'list<FMSCluster::StFmsFittedPhoton,allocator<FMSCluster::StFmsFittedPhoton> >' 'FMSCluster::PhotonList' 0 - photons", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyDepositionInTowerOLD",2639,G__StFmsUtil_Cint_752_0_7, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"D - 'Double_t' 0 - parameters", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t*))(&FMSCluster::StFmsClusterFitter::energyDepositionInTowerOLD) ), 0);
   G__memfunc_setup("energyDepositionInTower",2416,G__StFmsUtil_Cint_752_0_8, 100, -1, G__defined_typename("Double_t"), 0, 8, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - xun d - 'Double_t' 0 - yun "
"D - 'Double_t' 0 - parameters i - 'Int_t' 0 - detectorId "
"d - 'Double_t' 0 - vertex_z i - 'Int_t' 0 - mMerge", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t*, Int_t, Double_t, Int_t))(&FMSCluster::StFmsClusterFitter::energyDepositionInTower) ), 0);
   G__memfunc_setup("energyDepositionInTower",2416,G__StFmsUtil_Cint_752_0_9, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&FMSCluster::StFmsClusterFitter::energyDepositionInTower) ), 0);
   G__memfunc_setup("energyDepositionInTowerSingleLayer",3535,G__StFmsUtil_Cint_752_0_10, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"D - 'Double_t' 0 - parameters", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t*))(&FMSCluster::StFmsClusterFitter::energyDepositionInTowerSingleLayer) ), 0);
   G__memfunc_setup("maxNFittedPhotons",1759,G__StFmsUtil_Cint_752_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsClusterFitter::maxNFittedPhotons) ), 0);
   G__memfunc_setup("SetVertexZ",1028,G__StFmsUtil_Cint_752_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMerge",796,G__StFmsUtil_Cint_752_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFmsClusterFitter",1853,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter), -1, 0, 1, 1, 4, 0, "u 'FMSCluster::StFmsClusterFitter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter), -1, 1, 1, 1, 4, 0, "u 'FMSCluster::StFmsClusterFitter' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runMinuitMinimization",2243,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyDepositionDistribution",2984,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 4, 0, 
"d - - 0 - x d - - 0 - y "
"D - - 0 - parameters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energyDepositionDistribution",2984,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 4, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("minimizationFunctionNPhoton",2852,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 4, 0, 
"i - 'Int_t' 1 - npar D - 'Double_t' 0 - grad "
"d - 'Double_t' 1 - fval D - 'Double_t' 0 - par "
"i - 'Int_t' 0 - iflag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("minimizationFunction2Photon",2824,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 3, 4, 0, 
"i - 'Int_t' 1 - nparam D - 'Double_t' 0 - grad "
"d - 'Double_t' 1 - fval D - 'Double_t' 0 - param "
"i - 'Int_t' 0 - iflag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readMinuitParameters",2086,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - parameters u 'vector<double,allocator<double> >' 'vector<double>' 1 - errors", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFmsUtil_Cint_752_0_22, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FMSCluster::StFmsClusterFitter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsUtil_Cint_752_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsClusterFitter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsUtil_Cint_752_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FMSCluster::StFmsClusterFitter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsUtil_Cint_752_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FMSCluster::StFmsClusterFitter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsUtil_Cint_752_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsUtil_Cint_752_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsClusterFitter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsUtil_Cint_752_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsClusterFitter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsUtil_Cint_752_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsClusterFitter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsUtil_Cint_752_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsClusterFitter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFmsClusterFitter", 1979, G__StFmsUtil_Cint_752_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFMSClustercLcLStFmsEventClusterer(void) {
   /* FMSCluster::StFmsEventClusterer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer));
   G__memfunc_setup("StFmsEventClusterer",1960,G__StFmsUtil_Cint_753_0_1, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer), -1, 0, 8, 1, 1, 0, 
"U 'StFmsDbMaker' - 0 - db i - 'Int_t' 0 - detectorId "
"i - 'Int_t' 0 - globalrefit i - 'Int_t' 0 - mergeSmallToLarge "
"i - 'Int_t' 0 - try1Photon i - 'Int_t' 0 - categorizationAlgo "
"i - 'Int_t' 0 - scaleShowerShape U 'StMuDst' - 0 - muDst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detector",858,G__StFmsUtil_Cint_753_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cluster",770,G__StFmsUtil_Cint_753_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'vector<FMSCluster::StFmsTower,allocator<FMSCluster::StFmsTower> >' 'vector<FMSCluster::StFmsTower>' 0 - towers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StFmsEventClusterer",1960,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer), -1, 0, 1, 1, 4, 0, "u 'FMSCluster::StFmsEventClusterer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer), -1, 1, 1, 1, 4, 0, "u 'FMSCluster::StFmsEventClusterer' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitEvent",837,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findClusters",1270,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitClusters",1176,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refitClusters",1391,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photonEnergyInCluster",2203,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 8, 
"U 'FMSCluster::StFmsTowerCluster' - 10 - cluster U 'FMSCluster::StFmsFittedPhoton' - 10 - photon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photonEnergyInTower",1994,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 8, 
"U 'FMSCluster::StFmsTower' - 10 - tower U 'FMSCluster::StFmsFittedPhoton' - 10 - photon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fit1PhotonCluster",1742,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 0, "U 'FMSCluster::StFmsTowerCluster' - 0 - cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StFmsUtil_Cint_753_0_13, 85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FMSCluster::StFmsEventClusterer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StFmsUtil_Cint_753_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsEventClusterer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StFmsUtil_Cint_753_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FMSCluster::StFmsEventClusterer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StFmsUtil_Cint_753_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FMSCluster::StFmsEventClusterer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StFmsUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StFmsUtil_Cint_753_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StFmsUtil_Cint_753_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsEventClusterer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StFmsUtil_Cint_753_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsEventClusterer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StFmsUtil_Cint_753_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSCluster::StFmsEventClusterer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StFmsUtil_Cint_753_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSCluster::StFmsEventClusterer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~StFmsEventClusterer", 2086, G__StFmsUtil_Cint_753_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStFmsUtil_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStFmsUtil_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStFmsUtil_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StFmsUtil_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSCluster = { "FMSCluster" , 110 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster = { "FMSCluster::StFmsTowerCluster" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower = { "FMSCluster::StFmsTower" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder = { "FMSCluster::StFmsClusterFinder" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR = { "list<FMSCluster::StFmsTower*,allocator<FMSCluster::StFmsTower*> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TMinuit = { "TMinuit" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSClustercLcLStFmsFittedPhoton = { "FMSCluster::StFmsFittedPhoton" , 115 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_StFmsCluster = { "StFmsCluster" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR = { "vector<FMSCluster::StFmsFittedPhoton,allocator<FMSCluster::StFmsFittedPhoton> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FMSCluster::StFmsFittedPhoton,allocator<FMSCluster::StFmsFittedPhoton> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_fmsRec_st = { "fmsRec_st" , 115 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_StFmsDbConfig = { "StFmsDbConfig" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_StFmsHit = { "StFmsHit" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_StFmsDbMaker = { "StFmsDbMaker" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_StMuDst = { "StMuDst" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_TF2 = { "TF2" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR = { "list<FMSCluster::StFmsFittedPhoton,allocator<FMSCluster::StFmsFittedPhoton> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter = { "FMSCluster::StFmsClusterFitter" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer = { "FMSCluster::StFmsEventClusterer" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR = { "vector<FMSCluster::StFmsTower,allocator<FMSCluster::StFmsTower> >" , 99 , -1 };
G__linked_taginfo G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FMSCluster::StFmsTower,allocator<FMSCluster::StFmsTower> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStFmsUtil_Cint() {
  G__StFmsUtil_CintLN_TClass.tagnum = -1 ;
  G__StFmsUtil_CintLN_TBuffer.tagnum = -1 ;
  G__StFmsUtil_CintLN_TMemberInspector.tagnum = -1 ;
  G__StFmsUtil_CintLN_TObject.tagnum = -1 ;
  G__StFmsUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_string.tagnum = -1 ;
  G__StFmsUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSCluster.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder.tagnum = -1 ;
  G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_TMinuit.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSClustercLcLStFmsFittedPhoton.tagnum = -1 ;
  G__StFmsUtil_CintLN_StFmsCluster.tagnum = -1 ;
  G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StFmsUtil_CintLN_fmsRec_st.tagnum = -1 ;
  G__StFmsUtil_CintLN_StFmsDbConfig.tagnum = -1 ;
  G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_StFmsHit.tagnum = -1 ;
  G__StFmsUtil_CintLN_StFmsDbMaker.tagnum = -1 ;
  G__StFmsUtil_CintLN_StMuDst.tagnum = -1 ;
  G__StFmsUtil_CintLN_TF2.tagnum = -1 ;
  G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter.tagnum = -1 ;
  G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer.tagnum = -1 ;
  G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR.tagnum = -1 ;
  G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStFmsUtil_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSCluster),0,-1,0,(char*)NULL,G__setup_memvarFMSCluster,G__setup_memfuncFMSCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTowerCluster),sizeof(FMSCluster::StFmsTowerCluster),-1,298496,(char*)NULL,G__setup_memvarFMSClustercLcLStFmsTowerCluster,G__setup_memfuncFMSClustercLcLStFmsTowerCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsTower),sizeof(FMSCluster::StFmsTower),-1,324864,(char*)NULL,G__setup_memvarFMSClustercLcLStFmsTower,G__setup_memfuncFMSClustercLcLStFmsTower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFinder),sizeof(FMSCluster::StFmsClusterFinder),-1,263424,(char*)NULL,G__setup_memvarFMSClustercLcLStFmsClusterFinder,G__setup_memfuncFMSClustercLcLStFmsClusterFinder);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsTowermUcOallocatorlEFMSClustercLcLStFmsTowermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TMinuit);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsFittedPhoton);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_StFmsCluster);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_fmsRec_st);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_StFmsDbConfig),sizeof(StFmsDbConfig),-1,265984,(char*)NULL,G__setup_memvarStFmsDbConfig,G__setup_memfuncStFmsDbConfig);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_StFmsHit);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_StFmsDbMaker);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_StMuDst);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_TF2);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_listlEFMSClustercLcLStFmsFittedPhotoncOallocatorlEFMSClustercLcLStFmsFittedPhotongRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsClusterFitter),sizeof(FMSCluster::StFmsClusterFitter),-1,327424,(char*)NULL,G__setup_memvarFMSClustercLcLStFmsClusterFitter,G__setup_memfuncFMSClustercLcLStFmsClusterFitter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_FMSClustercLcLStFmsEventClusterer),sizeof(FMSCluster::StFmsEventClusterer),-1,327168,(char*)NULL,G__setup_memvarFMSClustercLcLStFmsEventClusterer,G__setup_memfuncFMSClustercLcLStFmsEventClusterer);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_vectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgR);
   G__get_linked_tagnum_fwd(&G__StFmsUtil_CintLN_reverse_iteratorlEvectorlEFMSClustercLcLStFmsTowercOallocatorlEFMSClustercLcLStFmsTowergRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupStFmsUtil_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStFmsUtil_Cint()");
  G__set_cpp_environmentStFmsUtil_Cint();
  G__cpp_setup_tagtableStFmsUtil_Cint();

  G__cpp_setup_inheritanceStFmsUtil_Cint();

  G__cpp_setup_typetableStFmsUtil_Cint();

  G__cpp_setup_memvarStFmsUtil_Cint();

  G__cpp_setup_memfuncStFmsUtil_Cint();
  G__cpp_setup_globalStFmsUtil_Cint();
  G__cpp_setup_funcStFmsUtil_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStFmsUtil_Cint();
  return;
}
class G__cpp_setup_initStFmsUtil_Cint {
  public:
    G__cpp_setup_initStFmsUtil_Cint() { G__add_setup_func("StFmsUtil_Cint",(G__incsetup)(&G__cpp_setupStFmsUtil_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStFmsUtil_Cint() { G__remove_setup_func("StFmsUtil_Cint"); }
};
G__cpp_setup_initStFmsUtil_Cint G__cpp_setup_initializerStFmsUtil_Cint;

